name: quickjs

on:
  [push]
jobs:
  windows:
    name: windows
    runs-on: windows-latest
    if: "contains(toJSON(github.event.commits.*.message), '[build windows]')"
    steps:
    - uses: actions/checkout@v2
      name: Checkout project
    - uses: actions/setup-java@v2
      with:
        distribution: temurin
        java-version: 11
        java-package: jdk
        architecture: x64
        cache: gradle
    - uses: msys2/setup-msys2@v2
      with:
        msystem: mingw64
        install: >-
          mingw64/mingw-w64-x86_64-cmake
          mingw-w64-x86_64-toolchain
          mingw-w64-x86_64-clang
          mingw-w64-x86_64-ninja
    - name: Build
      shell: msys2 {0}
      run: sh native/build.sh
    - name: Test
      shell: msys2 {0}
      run: sh gradlew --no-daemon quack-java:test serialization:test
    - name: Archive library
      uses: actions/upload-artifact@v2
      with:
        name: quickjs-windows
        path: quack-jni/src/main/resources/META-INF/quickjs.dll
  macos:
    name: macos
    runs-on: macos-10.15
    if: "contains(toJSON(github.event.commits.*.message), '[build macos]')"
    steps:
    - uses: actions/checkout@v2
      name: Checkout project
    - uses: actions/setup-java@v2
      with:
        distribution: temurin
        java-version: 11
        java-package: jdk
        architecture: x64
        cache: gradle
    - name: Build
      run: sh native/build.sh
    - name: Test
      run: sh gradlew --no-daemon quack-java:test serialization:test
    - name: Archive library
      uses: actions/upload-artifact@v2
      with:
        name: quickjs-macos
        path: quack-jni/src/main/resources/META-INF/libquickjs.dylib
  linux:
    name: linux
    # runs-on: ubuntu-16.04
    runs-on: ubuntu-latest
    if: "contains(toJSON(github.event.commits.*.message), '[build linux]')"
    steps:
    - uses: actions/checkout@v2
      name: Checkout project
    - uses: actions/setup-java@v2
      with:
        distribution: temurin
        java-version: 11
        java-package: jdk
        architecture: x64
        cache: gradle
    - name: Build
      run: bash native/build.sh
    - name: Test
      run: sh gradlew --no-daemon quack-java:test serialization:test
    - name: Archive library
      uses: actions/upload-artifact@v2
      with:
        name: quickjs-linux
        path: quack-jni/src/main/resources/META-INF/libquickjs.so
  android:
    name: android
    if: contains(toJSON(github.event.commits.*.message), '[build android]')
    runs-on: macos-10.15
    environment:
      name: actions
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-java@v2
      with:
        distribution: temurin
        java-version: 11
        java-package: jdk
        architecture: x64
        cache: gradle
    - name: Download & install the Android SDK.
      uses: malinskiy/action-android/install-sdk@release/0.1.2
    - name: Set up platform tools like adb.
      run: sdkmanager platform-tools
    - name: Start ADB (and verify that pathing is working correctly).
      run: adb devices
    - name: Test(android)
      uses: malinskiy/action-android/emulator-run-cmd@release/0.1.2
      with:
        cmd: sh gradlew quack-android:connectedAndroidTest
        api: 25
        tag: default
        abi: x86
    - name: Save logcat output
      uses: actions/upload-artifact@v2
      if: failure()
      with:
        name: logcat
        path: artifacts/logcat.log
    - name: Build with Gradle
      run: sh gradlew quack-android:publish
    - name: Archive result
      run: tar cvfz build/android.tar.gz quack-android/.cxx quack-android/build > /dev/null
    - name: Upload result
      uses: actions/upload-artifact@v2
      with:
        name: quickjs-android
        path: build/android.tar.gz
  publish:
    name: publish
    if: ${{ ! failure() && contains(toJSON(github.event.commits.*.message), '[publish]')}}
    needs: [windows, macos, linux, android]
    runs-on: macos-10.15
    environment:
      name: actions
    steps:
    - uses: actions/checkout@v2
    - name: Get Run ID
      id: get_run_id
      run: |
        echo "::set-output name=run_id::$(\
          gh run list \
            --workflow myget-pack.yml \
            --json conclusion,headSha,status,databaseId \
            --jq ".[] | select( .conclusion == \"success\" and .headSha == \"${{github.sha}}\") | .databaseId" \
        )"
      env:
        GITHUB_TOKEN: ${{ github.token }}
    - name: Download windows library
      uses: dawidd6/action-download-artifact@v2
      with:
        workflow: quickjs.yml
        branch: master
        event: push
        search_artifacts: true
        name: quickjs-windows
        path: quack-jni/src/main/resources/META-INF/
        run_id: ${{steps.get_run_id.outputs.run_id}}
    - name: Download linux library
      uses: dawidd6/action-download-artifact@v2
      with:
        workflow: quickjs.yml
        branch: master
        event: push
        search_artifacts: true
        name: quickjs-linux
        path: quack-jni/src/main/resources/META-INF/
        run_id: ${{steps.get_run_id.outputs.run_id}}
    - name: Download macos library
      uses: dawidd6/action-download-artifact@v2
      with:
        workflow: quickjs.yml
        branch: master
        event: push
        search_artifacts: true
        name: quickjs-macos
        path: quack-jni/src/main/resources/META-INF/
        run_id: ${{steps.get_run_id.outputs.run_id}}
    - name: Download android Assemble
      uses: dawidd6/action-download-artifact@v2
      with:
        workflow: quickjs.yml
        branch: master
        event: push
        search_artifacts: true
        name: quickjs-android
        path: build/
        run_id: ${{steps.get_run_id.outputs.run_id}}
    - name: Extract android Assemble
      run: tar xvfz build/android.tar.gz
    - uses: actions/setup-java@v2
      with:
        distribution: temurin
        java-version: 11
        java-package: jdk
        architecture: x64
        cache: gradle
    - name: Publish
      run: sh gradlew publish
    - name: Deploy
      uses: peaceiris/actions-gh-pages@v3
      with:
        personal_token: ${{ secrets.GH_PAGES }}
        external_repository: uk-taniyama/maven
        publish_branch: master
        publish_dir: ./build/repository
        destination_dir: ./repository
        keep_files: true
